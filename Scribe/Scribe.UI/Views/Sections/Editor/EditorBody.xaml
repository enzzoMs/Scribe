<UserControl 
    x:Class="Scribe.UI.Views.Sections.Editor.EditorBody"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorSection="clr-namespace:Scribe.UI.Views.Sections.Editor"
    xmlns:components="clr-namespace:Scribe.UI.Views.Components"
    xmlns:nodes="clr-namespace:Scribe.Markup.Nodes;assembly=Scribe.Markup"
    xmlns:blocks="clr-namespace:Scribe.Markup.Nodes.Blocks;assembly=Scribe.Markup"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance editorSection:EditorViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="800"
    Name="Root">
    
    <UserControl.Resources>
        <Style TargetType="components:IconButton">
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="IconBrush" Value="{StaticResource Brush.Icon}"/>
            <Setter Property="IconPadding" Value="3"/>
        </Style>
        
        <Thickness x:Key="Dimen.Toolbar.Divider.Margin" Left="5" Right="5" Top="6" Bottom="6"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <components:IconButton
            Grid.Row="0"
            Grid.Column="0"
            ToolTip="{DynamicResource String.Button.Pin}"
            Command="{Binding ToggleSelectedDocumentPinnedStatusCommand}">
            <components:IconButton.Style>
                <Style TargetType="components:IconButton" BasedOn="{StaticResource {x:Type components:IconButton}}">
                    <Setter Property="IconGeometry" Value="{StaticResource Drawing.Pin.Empty}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedDocument.Document.IsPinned, FallbackValue=False}" Value="True">
                            <Setter Property="IconGeometry" Value="{StaticResource Drawing.Pin.Filled}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </components:IconButton.Style>
        </components:IconButton>
        <Rectangle
            Grid.Row="0"
            Grid.Column="1"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="2"
            ToolTip="{DynamicResource String.Button.Save.WithShortcut}"
            Command="{Binding SaveSelectedDocumentCommand}">
            <components:IconButton.Style>
                <Style TargetType="components:IconButton" BasedOn="{StaticResource {x:Type components:IconButton}}">
                    <Setter Property="IconGeometry" Value="{StaticResource Drawing.Save.Filled}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedDocument.HasUnsavedChanges, FallbackValue=False}" Value="True">
                            <Setter Property="IconGeometry" Value="{StaticResource Drawing.Save.Empty}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </components:IconButton.Style>
        </components:IconButton>
        <Rectangle
            Grid.Row="0"
            Grid.Column="3"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            x:Name="UndoDocumentEditButton"
            Grid.Row="0"
            Grid.Column="4"
            IconGeometry="{StaticResource Drawing.Undo}"
            ToolTip="{DynamicResource String.Button.Undo}"/>
        <components:IconButton
            x:Name="RedoDocumentEditButton"
            Grid.Row="0"
            Grid.Column="5"
            IconGeometry="{StaticResource Drawing.Redo}"
            ToolTip="{DynamicResource String.Button.Redo}"/>
        <Rectangle
            Grid.Row="0"
            Grid.Column="6"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="7"
            Click="OnMarkupIconClicked"
            ToolTip="{DynamicResource String.Markup.Header}"
            IconGeometry="{StaticResource Drawing.Heading}"
            CommandParameter="{x:Type blocks:HeaderNode}"
            Focusable="False"
            IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="8"
            Click="OnMarkupIconClicked"
            ToolTip="{DynamicResource String.Markup.List.Unordered}"
            IconGeometry="{StaticResource Drawing.List.Bullet}"
            CommandParameter="{x:Type blocks:UnorderedListNode}"
            Focusable="False"
            IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="9"
            Click="OnMarkupIconClicked"
            ToolTip="{DynamicResource String.Markup.List.Ordered}"
            IconGeometry="{StaticResource Drawing.List.Numbered}"
            CommandParameter="{x:Type blocks:OrderedListNode}"
            Focusable="False"
            IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>

        <Rectangle
            Grid.Row="0"
            Grid.Column="11"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="12"
            IconGeometry="{StaticResource Drawing.Edit}"
            ToolTip="{DynamicResource String.Button.Edit}"
            Command="{Binding EnterEditModeCommand}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="13"
            ToolTip="{DynamicResource String.Button.Delete}"
            PreviewMouseLeftButtonDown="OnDeleteDocumentClicked"
            IconGeometry="{StaticResource Drawing.Delete}"/>
        
        <Rectangle
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="14"
            Style="{StaticResource Style.Divider.Horizontal}"/>
        <ContentControl
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="14"
            Content="{Binding Header, ElementName=Root}"
            Margin="0 20 0 0"/>
        <components:MarkupEditor
            x:Name="MarkupEditor"
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="14"
            EditorText="{Binding SelectedDocument.EditedContent, Mode=TwoWay}"
            EditorTextChanged="OnDocumentContentChanged"
            InPreviewMode="{Binding InPreviewMode}"/>
    </Grid>
</UserControl>
