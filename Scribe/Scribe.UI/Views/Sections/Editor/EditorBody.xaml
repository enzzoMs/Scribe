<UserControl 
    x:Class="Scribe.UI.Views.Sections.Editor.EditorBody"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editorSection="clr-namespace:Scribe.UI.Views.Sections.Editor"
    xmlns:components="clr-namespace:Scribe.UI.Views.Components"
    xmlns:blocks="clr-namespace:Scribe.Markup.Nodes.Blocks;assembly=Scribe.Markup"
    xmlns:leafs="clr-namespace:Scribe.Markup.Nodes.Leafs;assembly=Scribe.Markup"
    xmlns:inlines="clr-namespace:Scribe.Markup.Inlines;assembly=Scribe.Markup"
    xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance editorSection:EditorViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="1050"
    Name="Root"
    Loaded="OnEditorBodyLoaded">
    
    <UserControl.Resources>
        <Style TargetType="components:IconButton">
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="IconBrush" Value="{StaticResource Brush.Icon}"/>
            <Setter Property="IconPadding" Value="5"/>
        </Style>
        
        <Thickness x:Key="Dimen.Toolbar.Divider.Margin" Left="5" Right="5" Top="6" Bottom="6"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <components:IconButton
            Grid.Row="0"
            Grid.Column="0"
            ToolTip="{DynamicResource String.Button.Pin}"
            Command="{Binding ToggleSelectedDocumentPinnedStatusCommand}">
            <components:IconButton.Style>
                <Style TargetType="components:IconButton" BasedOn="{StaticResource {x:Type components:IconButton}}">
                    <Setter Property="IconGeometry" Value="{StaticResource Drawing.Pin.Empty}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedDocument.Document.IsPinned, FallbackValue=False}" Value="True">
                            <Setter Property="IconGeometry" Value="{StaticResource Drawing.Pin.Filled}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </components:IconButton.Style>
        </components:IconButton>
        <Rectangle
            Grid.Row="0"
            Grid.Column="1"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="2"
            ToolTip="{DynamicResource String.Button.Save.WithShortcut}"
            Command="{Binding SaveSelectedDocumentCommand}">
            <components:IconButton.Style>
                <Style TargetType="components:IconButton" BasedOn="{StaticResource {x:Type components:IconButton}}">
                    <Setter Property="IconGeometry" Value="{StaticResource Drawing.Save.Filled}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedDocument.HasUnsavedChanges, FallbackValue=False}" Value="True">
                            <Setter Property="IconGeometry" Value="{StaticResource Drawing.Save.Empty}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </components:IconButton.Style>
        </components:IconButton>
        <Rectangle
            Grid.Row="0"
            Grid.Column="3"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="4"
            Click="OnExportDocumentClicked"
            ToolTip="{DynamicResource String.Button.Export}"
            IconGeometry="{StaticResource Drawing.Export}"/>
        <Rectangle
            Grid.Row="0"
            Grid.Column="5"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            x:Name="UndoDocumentEditButton"
            Grid.Row="0"
            Grid.Column="6"
            Click="OnUndoButtonClicked"
            IconPadding="4"
            IconGeometry="{StaticResource Drawing.Undo}"
            ToolTip="{DynamicResource String.Button.Undo}"/>
        <components:IconButton
            x:Name="RedoDocumentEditButton"
            Grid.Row="0"
            Grid.Column="7"
            Click="OnRedoButtonClicked"
            IconPadding="4"
            IconGeometry="{StaticResource Drawing.Redo}"
            ToolTip="{DynamicResource String.Button.Redo}"/>
        <Rectangle
            Grid.Row="0"
            Grid.Column="8"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <FrameworkElement
            SizeChanged="OnToolbarSizeChanged"
            Grid.Row="0"
            Grid.Column="9"/>
        <StackPanel
            Name="MarkupIconsPanel"
            Grid.Row="0"
            Grid.Column="9"
            Orientation="Horizontal">
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Bold}"
                IconGeometry="{StaticResource Drawing.Bold}"
                CommandParameter="{x:Static inlines:InlineMarkupModifiers.Bold}"
                IconPadding="6"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Italic}"
                IconGeometry="{StaticResource Drawing.Italic}"
                CommandParameter="{x:Static inlines:InlineMarkupModifiers.Italic}"
                IconPadding="6"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Underline}"
                IconGeometry="{StaticResource Drawing.Underline}"
                CommandParameter="{x:Static inlines:InlineMarkupModifiers.Underline}"
                IconPadding="3"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Header}"
                IconGeometry="{StaticResource Drawing.Heading}"
                CommandParameter="{x:Type blocks:HeaderNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.List.Unordered}"
                IconGeometry="{StaticResource Drawing.List.Bullet}"
                CommandParameter="{x:Type blocks:UnorderedListNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.List.Ordered}"
                IconGeometry="{StaticResource Drawing.List.Numbered}"
                CommandParameter="{x:Type blocks:OrderedListNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Quote}"
                IconGeometry="{StaticResource Drawing.QuotationMarks}"
                CommandParameter="{x:Type blocks:QuoteNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Code}"
                IconGeometry="{StaticResource Drawing.Code}"
                CommandParameter="{x:Type blocks:CodeNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.TaskList}"
                IconGeometry="{StaticResource Drawing.CheckBox}"
                CommandParameter="{x:Type blocks:TaskListNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Image}"
                IconGeometry="{StaticResource Drawing.Image}"
                CommandParameter="{x:Type blocks:ImageNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.ToggleList}"
                IconGeometry="{StaticResource Drawing.DownArrow}"
                CommandParameter="{x:Type blocks:ToggleListNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Callout}"
                IconGeometry="{StaticResource Drawing.Asterisk}"
                CommandParameter="{x:Type blocks:CalloutNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"
                IconPadding="6"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.ProgressBar}"
                IconGeometry="{StaticResource Drawing.ProgressBar}"
                CommandParameter="{x:Type leafs:ProgressBarNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Indentation}"
                IconGeometry="{StaticResource Drawing.Indentation}"
                CommandParameter="{x:Type blocks:IndentedNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Label}"
                IconGeometry="{StaticResource Drawing.Bookmark}"
                CommandParameter="{x:Type leafs:LabelNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Table}"
                IconGeometry="{StaticResource Drawing.Table}"
                CommandParameter="{x:Type blocks:TableNode}"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
            <components:IconButton
                Click="OnMarkupIconClicked"
                ToolTip="{DynamicResource String.Markup.Colors}"
                IconGeometry="{StaticResource Drawing.Colors}"
                CommandParameter="{x:Type drawing:Color}"
                IconPadding="4"
                Focusable="False"
                IsEnabled="{Binding IsTextBoxFocused, ElementName=MarkupEditor}"/>
        </StackPanel>
        <Rectangle
            Grid.Row="0"
            Grid.Column="10"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="11"
            Click="OnHelpIconClicked"
            ToolTip="{DynamicResource String.Button.Help}"
            IconGeometry="{StaticResource Drawing.QuestionMark}"
            IconPadding="3"/>
        <Rectangle
            Grid.Row="0"
            Grid.Column="12"
            Style="{StaticResource Style.Divider.Vertical}"
            Margin="{StaticResource Dimen.Toolbar.Divider.Margin}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="13"
            IconGeometry="{StaticResource Drawing.Edit}"
            IconPadding="3"
            ToolTip="{DynamicResource String.Button.Edit}"
            Command="{Binding EnterEditModeCommand}"/>
        <components:IconButton
            Grid.Row="0"
            Grid.Column="14"
            IconPadding="3"
            ToolTip="{DynamicResource String.Button.Delete}"
            PreviewMouseLeftButtonDown="OnDeleteDocumentClicked"
            IconGeometry="{StaticResource Drawing.Delete}"/>
        <Rectangle
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="15"
            Style="{StaticResource Style.Divider.Horizontal}"/>
        <ContentControl
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="15"
            Content="{Binding Header, ElementName=Root}"
            Margin="0 20 0 0"/>
        <components:MarkupEditor
            x:Name="MarkupEditor"
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="15"
            EditorText="{Binding SelectedDocument.EditedContent, Mode=TwoWay}"
            EditorTextChanged="OnDocumentContentChanged"
            OpenDocumentByNameCommand="{Binding OpenDocumentByNameCommand}"
            InPreviewMode="{Binding InPreviewMode}"/>
    </Grid>
</UserControl>
