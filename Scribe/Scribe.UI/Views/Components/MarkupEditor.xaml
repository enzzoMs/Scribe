<UserControl
    x:Class="Scribe.UI.Views.Components.MarkupEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:converters="clr-namespace:Scribe.UI.Converters"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:sys="clr-namespace:System;assembly=mscorelib"
    mc:Ignorable="d"
    Name="Root">
    
    <UserControl.Resources>
        <Thickness x:Key="Dimen.ScrollBar.Vertical.Margin">0</Thickness>
        <Thickness x:Key="Dimen.ScrollBar.Vertical.OuterMargin" Left="11"/>
        <sys:Double x:Key="Dimen.ScrollBar.Vertical.Size">20</sys:Double>
        
        <converters:MarkupConverter x:Key="MarkupConverter"/>
        
        <Color x:Key="SyntaxHighlightingColor"></Color>
        
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="LineHeight" Value="20"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        </Style>
        
        <Style x:Key="Header1.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="19"/>
        </Style>
        
        <Style x:Key="Header2.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        
        <Style x:Key="Header3.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="17"/>
        </Style>
        
        <Style x:Key="Header4.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        
        <Style x:Key="Header5.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        
        <Style x:Key="BulletIndicator.Style" TargetType="Ellipse">
            <Setter Property="Width" Value="6"/>
            <Setter Property="Height" Value="6"/>
            <Setter Property="Fill" Value="{DynamicResource Brush.Text.Primary}"/>
            <Setter Property="Margin" Value="20 8 12 0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        
        <Style x:Key="ListIndicator.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Margin" Value="19 0 12 0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        
        <Style x:Key="QuoteBlock.Text.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontStyle" Value="Italic"/>
        </Style>
        
        <Style x:Key="QuoteBlock.Indicator.Style" TargetType="Rectangle">
            <Setter Property="Width" Value="3"/>
            <Setter Property="Fill" Value="{DynamicResource Brush.Text.Primary}"/>
            <Setter Property="Margin" Value="20 0 12 0"/>
        </Style>
        
        <Style x:Key="CodeInline.Style" TargetType="Inline">
            <Setter Property="FontFamily" Value="{StaticResource Text.Monospace}"/>
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Surface}"/>
        </Style>
        
        <Style x:Key="CodeBlock.Text.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontFamily" Value="{StaticResource Text.Monospace}"/>
        </Style>
        
        <Style x:Key="CodeBlock.Border.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Surface}"/>
            <Setter Property="Padding" Value="14"/>
        </Style>
        
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Margin" Value="18 3 12 0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        
        <Style x:Key="CheckBox.Checked.Text.Style" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="TextDecorations" Value="Strikethrough"/>
        </Style>
        
        <Style x:Key="Toggle.Button.Style" TargetType="Border">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0 3 5 0"/>
            <Style.Resources>
                <Style TargetType="Path">
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Data" Value="{StaticResource Drawing.RightArrow}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Primary}"/>
                    <Setter Property="Stretch" Value="Uniform"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Icon.BaseStyle" TargetType="Path">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Margin" Value="0 4 12 0"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        
        <Style x:Key="ProgressBar.Item.Style" TargetType="Border">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Margin" Value="2 0 3 0"/>
            <Setter Property="Background" Value="{DynamicResource Brush.Primary}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary}"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
        </Style>
        
        <Style x:Key="TableCell.Style" TargetType="Border">
            <Setter Property="BorderThickness" Value="1.3 1.3 0 0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}"/>
            <Setter Property="Padding" Value="14 14"/>
        </Style>
        
        <Style x:Key="TableCell.Header.Style" TargetType="Border" BasedOn="{StaticResource TableCell.Style}">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Surface}"/>
        </Style>
        
        <Style x:Key="Link.Style" TargetType="Inline">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Markup.Link}"/>
        </Style>
        
        <Style x:Key="Spoiler.Style" TargetType="Inline">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Surface}"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Markup.Surface}"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        
        <Style x:Key="Callout.Default.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Default.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Width" Value="17"/>
                    <Setter Property="Height" Value="17"/>
                    <Setter Property="Data" Value="{StaticResource Drawing.Asterisk}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Default.Icon}"/>
                    <Setter Property="Margin" Value="0 3 13 0"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Success.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Success.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Width" Value="17"/>
                    <Setter Property="Height" Value="17"/>
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Success}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Success.Icon}"/>
                    <Setter Property="Margin" Value="0 5 11 0"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Failure.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Failure.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Failure}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Failure.Icon}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Warning.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Warning.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Warning}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Warning.Icon}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Question.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Question.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Question}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Question.Icon}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Favorite.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Favorite.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Favorite}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Favorite.Icon}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="Callout.Note.Style" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Markup.Callout.Note.Background}"/>
            <Setter Property="Padding" Value="14"/>
            <Style.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource Callout.Icon.BaseStyle}">
                    <Setter Property="Data" Value="{StaticResource Drawing.Callout.Note}"/>
                    <Setter Property="Fill" Value="{DynamicResource Brush.Markup.Callout.Note.Icon}"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style TargetType="{x:Type avalonEdit:TextArea}">
            <Setter Property="SelectionCornerRadius" Value="0" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <avalonEdit:TextEditor
            Name="EditorTextBox"
            Background="{Binding EditorBackground, ElementName=Root}"
            Foreground="{DynamicResource Brush.Text.Primary}"
            FontFamily="{StaticResource Text.Monospace}"
            FontWeight="Medium"
            FontSize="{StaticResource Dimen.TextSize.Normal1}"
            TextChanged="EditorTextBox_OnTextChanged"
            ShowLineNumbers="True"
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Auto"
            Margin="20 0 0 0"/>
        <ListView
            Name="MarkupViewerPanel"
            BorderThickness="0"
            Margin="20 0 0 0"
            Background="{Binding EditorBackground, ElementName=Root}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            VirtualizingPanel.IsVirtualizing="False"
            VirtualizingPanel.ScrollUnit="Pixel">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <ContentControl>
                                    <ContentControl.Content>
                                        <MultiBinding Converter="{StaticResource MarkupConverter}">
                                            <Binding ElementName="Root" Mode="OneTime"/>
                                            <Binding/>
                                        </MultiBinding>
                                    </ContentControl.Content>
                                </ContentControl>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
