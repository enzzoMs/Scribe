<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="Style.Divider.Horizontal" TargetType="Rectangle">
        <Style.Setters>
            <Setter Property="Height" Value="{StaticResource Dimen.Divider.Size}"/>
            <Setter Property="Fill" Value="{DynamicResource Brush.Divider}"/>
        </Style.Setters>
    </Style>
    
    <Style x:Key="Style.Divider.Vertical" TargetType="Rectangle">
        <Style.Setters>
            <Setter Property="Width" Value="{StaticResource Dimen.Divider.Size}"/>
            <Setter Property="Fill" Value="{DynamicResource Brush.Divider}"/>
        </Style.Setters>
    </Style>
    
    <Style x:Key="Style.NoData.Icon" TargetType="Path">
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Fill" Value="{DynamicResource Brush.BackgroundIcon}"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 8"/>
    </Style>
    
    <ControlTemplate x:Key="Button.Primary.Template" TargetType="Button">
        <Border 
            Padding="14 6"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="2">
            <TextBlock
                Text="{TemplateBinding Content}"
                Foreground="{TemplateBinding Foreground}"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>
        
    <ControlTemplate x:Key="Button.Primary.OnHover.Template" TargetType="Button">
        <Border 
            RenderOptions.EdgeMode="Aliased"
            Padding="14 6"
            Background="{DynamicResource Brush.Item.Selected.Background}"
            BorderBrush="{DynamicResource Brush.Item.Selected.Background}"
            BorderThickness="2">
            <TextBlock
                Text="{TemplateBinding Content}"
                Foreground="{DynamicResource Brush.Item.Selected.Foreground}"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>
        
    <Style x:Key="Button.Primary.Style" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Item.Selected.Background}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="14 6"/>
        <Setter Property="Template" Value="{StaticResource Button.Primary.Template}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{StaticResource Button.Primary.OnHover.Template}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Secondary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="Button.Secondary.Style" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Brush.Button.Secondary}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Padding="10 6"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter 
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Secondary.Highlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Secondary.Disabled}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.BackgroundText}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}"/>
            <Setter Property="FontFamily" Value="{StaticResource Text.Medium}"/>
            <Setter Property="FontSize" Value="{StaticResource Dimen.TextSize.Normal1}"/>
            <Setter Property="TextAlignment" Value="Justify"/>
        </Style.Setters>
    </Style>
    
    <Style x:Key="Style.NoData.Text" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource Brush.BackgroundText}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Secondary}"/>
            <Setter Property="FontFamily" Value="{StaticResource Text.Medium}"/>
            <Setter Property="FontSize" Value="{StaticResource Dimen.TextSize.Normal1}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Text.Primary}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary}"/>
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="Padding" Value="0 0 0 3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border 
                            x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Focusable="false" 
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource Brush.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
    
    <Style TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border 
                        x:Name="MenuItemBackground"
                        Padding="8,4" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter 
                                Content="{TemplateBinding Icon}" 
                                Margin="0 0 12 0" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Center"/>
                            <ContentPresenter 
                                Content="{TemplateBinding Header}" 
                                ContentSource="Header" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter 
                                Property="Background" 
                                TargetName="MenuItemBackground" 
                                Value="{DynamicResource Brush.MenuItem.Highlight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ContextMenu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border 
                        Background="{DynamicResource Brush.Background}" 
                        BorderBrush="{DynamicResource Brush.Divider}" 
                        BorderThickness="2">
                        <StackPanel 
                            ClipToBounds="True" 
                            Orientation="Vertical" 
                            IsItemsHost="True" 
                            Margin="5,4,5,4"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Style.ScrollViewer.TopHorizontal" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <ScrollContentPresenter
                            Grid.Row="1"/>
                        <ScrollBar 
                            Name="PART_HorizontalScrollBar"
                            Grid.Row="0"
                            Orientation="Horizontal"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>